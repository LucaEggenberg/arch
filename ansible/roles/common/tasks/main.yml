---
# general configuration
- name: ensure pacman mirrors are updated
  pacman:
    update_cache: yes
    upgrade: yes
    extra_args: "--noconfirm"

- name: enable multilib
  blockinfile:
    path: /etc/pacman.conf
    block: | 
      [multilib]
      Include = /etc/pacman.d/mirrorlist
    state: present
    backup: yes
  become: true

- name: resync pacman
  ansible.builtin.pacman:
    update_cache: yes
  become: true

- name: install common packages
  pacman:
    name:
      # util
      - vim
      - wget
      - unzip
      - make
      - htop
      - ufw
      - networkmanager
      - xdg-utils
      - rsync
      - base-devel
      - linux-headers
      - mesa-utils
      - smbclient
      - stow

      # audio
      - pipewire
      - wireplumber
      - pipewire-alsa
      - pipewire-pulse
      - pipewire-jack
      - pavucontrol
      - pamixer

      # bluetooth
      - bluez
      - bluez-utils
      - blueman
      
      # fonts
      - noto-fonts
      - ttf-dejavu
      - ttf-liberation
      - ttf-font-awesome
      - nerd-fonts

      # display manager
      - sddm
      - qt6-svg
      - qt6-declarative
      - qt5-quickcontrols2
      
      # apps
      - kitty
      - eog
      - evince
      - btop
      - mpv
      - file-roller
    state: present
    extra_args: "--noconfirm"

- name: install common yay packages
  shell: |
    yay -S --noconfirm openrgb-git
  become: false

- name: install gpu drivers
  pacman:
    name: "{{ gpu_packages }}"
    state: present
  become: true

- name: blacklist nouveau driver
  copy:
    content: | 
      blacklist nouveau
      options nouveau modset=0
    dest: /etc/modprobe.d/blacklist-nouveau.conf
    owner: root
    group: root
    mode: '0644'
  become: true
  notify: Rebuild initramfs

- name: install configured pacman packages
  pacman:
    name: "{{ pacman_packages }}"
    state: present
    extra_args: "--noconfirm"

- name: install configured yay packages
  shell: |
    yay -S --noconfirm {{ item }}
  become: false
  loop: "{{ yay_packages }}"

- name: enable and start networkmanager service
  systemd:
    name: NetworkManager
    enabled: yes
    state: started
  
- name: Configure UFW
  ufw:
    state: enabled
    policy: deny
  notify: Restart UFW

- name: allow ssh through Firewall
  ufw:
    rule: allow
    port: '22'
    proto: tcp
    state: enabled
  notify: Restart UFW

- name: set time-sync
  systemd:
    name: systemd-timesyncd.service
    enabled: yes
    state: started

- name: ensure sddm themes directory exists
  file:
    path: /usr/share/sddm/themes
    state: directory
    mode: '0755'

- name: clone or pull dotfiles
  git:
    repo: "https://github.com/LucaEggenberg/dotfiles.git"
    dest: /home/{{ ansible_user }}/dotfile_source
    version: main
    single_branch: yes
    update: yes

- name: symlink sddm theme
  command: "stow sddm-theme -t / -d /home/{{ ansible_user }}/dotfile_source"
  args:
    chdir: "/home/{{ ansible_user }}/dotfile_source"
  become: yes
  register: stow_sddm_theme
  changed_when: "'LINK' in stow_sddm_theme.stdout or 'RESTOW' in stow_sddm_theme.stdout"

- name: symlink sddm config
  command: "stow sddm -t / -d /home/{{ ansible_user }}/dotfile_source"
  args:
    chdir: "/home/{{ ansible_user }}/dotfile_source"
  become: yes
  register: stow_sddm_config
  changed_when: "'LINK' in stow_sddm_config.stdout or 'RESTOW' in stow_sddm_config.stdout"

- name: enable and start sddm
  systemd:
    name: sddm.service
    enabled: yes
    state: stopped
