---
# general configuration
- name: ensure pacman mirrors are updated
  pacman:
    update_cache: yes
    upgrade: yes
    extra_args: "--noconfirm"

- name: enable multilib
  blockinfile:
    path: /etc/pacman.conf
    block: | 
      [multilib]
      Include = /etc/pacman.d/mirrorlist
    state: present
    backup: yes
  become: true

- name: resync pacman
  ansible.builtin.pacman:
    update_cache: yes
  become: true

- name: install common packages
  pacman:
    name:
      # util
      - vim
      - wget
      - unzip
      - make
      - htop
      - ufw
      - networkmanager
      - xdg-utils
      - rsync
      - base-devel
      - linux-headers
      - mesa-utils

      # audio
      - pipewire
      - wireplumber
      - pipewire-alsa
      - pipewire-pulse
      - pipewire-jack
      - pavucontrol

      # bluetooth
      - bluez
      - bluez-utils
      - blueman
      
      # fonts
      - noto-fonts
      - ttf-dejavu
      - ttf-liberation
      - ttf-font-awesome
      - nerd-fonts

      # display manager
      - sddm
      - qt6-svg
      - qt6-declarative
      - qt5-quickcontrols2
      
      # apps
      - kitty
      - thunar
      - eog
      - evince
      - gnome-calculator
      - btop
      - mpv
      - file-roller
    state: present
    extra_args: "--noconfirm"

- name: install gpu drivers
  pacman:
    name: "{{ gpu_packages }}"
    state: present
  become: true

- name: blacklist nouveau driver
  copy:
    content: | 
      blacklist nouveau
      options nouveau modset=0
    dest: /etc/modprobe.d/blacklist-nouveau.conf
    owner: root
    group: root
    mode: '0644'
  become: true
  notify: Rebuild initramfs

- name: install configured pacman packages
  pacman:
    name: "{{ pacman_packages }}"
    state: present
    extra_args: "--noconfirm"

- name: install configured yay packages
  shell: |
    yay -S --noconfirm {{ item }}
  become: false
  loop: "{{ yay_packages }}"

- name: enable and start networkmanager service
  systemd:
    name: NetworkManager
    enabled: yes
    state: started
  
- name: Configure UFW
  ufw:
    state: enabled
    policy: deny
  notify: Restart UFW

- name: allow ssh through Firewall
  ufw:
    rule: allow
    port: '22'
    proto: tcp
    state: enabled
  notify: Restart UFW

- name: set time-sync
  systemd:
    name: systemd-timesyncd.service
    enabled: yes
    state: started

- name: create config directories
  file:
    path: "/home/{{ ansible_user }}/.config/{{ item.path }}"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
  with_filetree: "../templates/.config"
  when: item.state == "directory"

- name: Render and copy dotfiles
  template:
    src: "{{ item.src }}"
    dest: "/home/{{ ansible_user }}/.config/{{ item.path }}"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0755'
  with_filetree: "../templates/.config"
  when: item.state == "file"

- name: ensure sddm themes directory exists
  file:
    path: /usr/share/sddm/themes
    state: directory
    mode: '0755'

- name: download catpuccin sddm theme
  get_url: 
    url: https://github.com/catppuccin/sddm/releases/download/v1.0.0/catppuccin-frappe.zip
    dest: "/tmp/catpuccin-frappe.zip"
    mode: '0644'
  become: true

- name: unzip theme to themes directory
  unarchive:
    src: /tmp/catpuccin-frappe.zip
    dest: /usr/share/sddm/themes/
    remote_src: yes
    creates: /usr/share/sddm/themes/catpuccin-frappe

- name: create sddm config
  template:
    src: sddm.conf
    dest: /etc/sddm.conf
    owner: root
    group: root
    mode: '0644'

- name: enable and start sddm
  systemd:
    name: sddm.service
    enabled: yes
    state: stopped